AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Alarms and dashboard
Parameters:
  bucketName:
    Type: String
    Description: The name of the S3 BucketName
  environment:
    Type: String
    Description: The environment name
  app:
    Type: String
    Description: App name used for tagging and naming
  date:
    Type: String
    Description: Date now
Resources:
  ConnectFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Connect Function Errors
      AlarmDescription: "Triggers if the ConnectFunction Lambda function has errors."
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: ConnectFunction
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  ConnectFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Connect Function Throttles
      AlarmDescription: "Triggers if the ConnectFunction Lambda function throttles."
      Namespace: AWS/Lambda
      MetricName: Throttles
      Dimensions:
        - Name: FunctionName
          Value: ConnectFunction
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  CheckFunctionErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Check Function Errors
      AlarmDescription: "Triggers if the CheckFunction Lambda function has errors."
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: CheckFunction
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  CheckFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Check Function Throttles
      AlarmDescription: "Triggers if the CheckFunction Lambda function throttles."
      Namespace: AWS/Lambda
      MetricName: Throttles
      Dimensions:
        - Name: FunctionName
          Value: CheckFunction
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  MissedCheckoutsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Missed Checkouts
      AlarmDescription: "Triggers if checkouts have been missed."
      Namespace:
        Fn::Sub: "${app}/Check"
      MetricName: CheckoutsMissed
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  MissedCheckinsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Missed Checkins
      AlarmDescription: "Triggers if checkins have been missed."
      Namespace:
        Fn::Sub: "${app}/Check"
      MetricName: CheckinsMissed
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  EmergencyCallsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: Emergency Calls
      AlarmDescription: "Triggers if emergency calls have occurred."
      Namespace:
        Fn::Sub: "${app}/Connect"
      MetricName: Emergencies
      Statistic: Sum
      Period: 900            # Evaluate every 15 minutes
      EvaluationPeriods: 48  # Evaluate over 12 hour window
      DatapointsToAlarm: 1   # Trigger if any single period breaches threshold
      Threshold: 0
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
  LoneworkerDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName:
        Fn::Sub: "${app}"
      DashboardBody:
        Fn::Sub: |
            {
                "widgets": [
                    {
                        "height": 6,
                        "width": 6,
                        "y": 3,
                        "x": 0,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "AWS/Lambda", "Invocations", "FunctionName", "CheckFunction", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "Errors", ".", ".", { "region": "${AWS::Region}", "visible": false } ],
                                [ "...", "ConnectFunction", { "region": "${AWS::Region}", "color": "#d62728" } ],
                                [ ".", "Invocations", ".", ".", { "region": "${AWS::Region}", "color": "#2ca02c" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "${AWS::Region}",
                            "period": 900,
                            "stat": "Sum",
                            "title": "Connect function invocations and errors"
                        }
                    },
                    {
                        "height": 6,
                        "width": 6,
                        "y": 9,
                        "x": 0,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "AWS/Lambda", "Invocations", "FunctionName", "CheckFunction", { "region": "${AWS::Region}", "color": "#2ca02c" } ],
                                [ ".", "Errors", ".", ".", { "region": "${AWS::Region}", "color": "#d62728" } ],
                                [ "...", "ConnectFunction", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "Invocations", ".", ".", { "region": "${AWS::Region}", "visible": false } ],
                                [ "${app}/Check", "CheckinsMissed", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "CheckoutsMissed", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "MeetingsChecked", { "region": "${AWS::Region}", "visible": false } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "${AWS::Region}",
                            "title": "Check function invocations and errors",
                            "period": 900,
                            "stat": "Sum"
                        }
                    },
                    {
                        "height": 6,
                        "width": 6,
                        "y": 3,
                        "x": 6,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "AWS/Lambda", "Invocations", "FunctionName", "CheckFunction", { "region": "${AWS::Region}", "color": "#2ca02c", "visible": false } ],
                                [ ".", "Errors", ".", ".", { "region": "${AWS::Region}", "color": "#d62728", "visible": false } ],
                                [ "...", "ConnectFunction", { "region": "${AWS::Region}", "color": "#d62728", "visible": false } ],
                                [ ".", "Invocations", ".", ".", { "region": "${AWS::Region}", "color": "#c49c94", "visible": false } ],
                                [ "${app}/Check", "CheckinsMissed", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "CheckoutsMissed", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "MeetingsChecked", { "region": "${AWS::Region}", "visible": false } ],
                                [ "${app}/Connect", "NoMatchingAppointment", { "region": "${AWS::Region}" } ],
                                [ ".", "Checkins", { "region": "${AWS::Region}" } ],
                                [ ".", "Emergencies", { "region": "${AWS::Region}" } ],
                                [ ".", "Checkouts", { "region": "${AWS::Region}" } ],
                                [ ".", "DuplicateCall", { "region": "${AWS::Region}" } ],
                                [ ".", "Success", { "region": "${AWS::Region}" } ],
                                [ ".", "UnknownCaller", { "region": "${AWS::Region}" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "${AWS::Region}",
                            "title": "Connect function results",
                            "period": 900,
                            "stat": "Sum"
                        }
                    },
                    {
                        "height": 6,
                        "width": 6,
                        "y": 9,
                        "x": 6,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "AWS/Lambda", "Invocations", "FunctionName", "CheckFunction", { "region": "${AWS::Region}", "color": "#2ca02c", "visible": false } ],
                                [ ".", "Errors", ".", ".", { "region": "${AWS::Region}", "color": "#d62728", "visible": false } ],
                                [ "...", "ConnectFunction", { "region": "${AWS::Region}", "visible": false } ],
                                [ ".", "Invocations", ".", ".", { "region": "${AWS::Region}", "visible": false } ],
                                [ "${app}/Check", "CheckinsMissed", { "region": "${AWS::Region}" } ],
                                [ ".", "CheckoutsMissed", { "region": "${AWS::Region}" } ],
                                [ ".", "MeetingsChecked", { "region": "${AWS::Region}" } ]
                            ],
                            "view": "timeSeries",
                            "stacked": false,
                            "region": "${AWS::Region}",
                            "title": "Check function results",
                            "period": 900,
                            "stat": "Sum"
                        }
                    },
                    {
                        "height": 5,
                        "width": 6,
                        "y": 3,
                        "x": 12,
                        "type": "alarm",
                        "properties": {
                            "title": "Alarms in past 12 hours",
                            "alarms": [
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${MissedCheckinsAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${MissedCheckoutsAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${EmergencyCallsAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${ConnectFunctionErrorAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${ConnectFunctionThrottleAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${CheckFunctionErrorAlarm}",
                                "arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:${CheckFunctionThrottleAlarm}"
                            ]
                        }
                    },
                    {
                        "height": 3,
                        "width": 18,
                        "y": 0,
                        "x": 0,
                        "type": "metric",
                        "properties": {
                            "metrics": [
                                [ "${app}/Connect", "Emergencies", { "region": "${AWS::Region}", "label": "Emergency calls" } ],
                                [ "${app}/Check", "CheckinsMissed", { "region": "${AWS::Region}", "label": "Checkins missed" } ],
                                [ ".", "CheckoutsMissed", { "region": "${AWS::Region}", "label": "Checkouts missed" } ],
                                [ "AWS/Lambda", "Errors" ],
                                [ ".", "Throttles" ]
                            ],
                            "sparkline": false,
                            "view": "singleValue",
                            "region": "${AWS::Region}",
                            "period": 300,
                            "stat": "Sum",
                            "title": "Missed calls and emergencies",
                            "setPeriodToTimeRange": true,
                            "trend": false
                        }
                    },
                    {
                        "type": "text",
                        "x": 12,
                        "y": 9,
                        "width": 6,
                        "height": 5,
                        "properties": {
                            "markdown": "This dashboard shows the following.\n\n- Total number of missed calls, emergencies, errors and throttles in the time period covered.\n- Whether there were any alarms (serious errors) in the past 12 hours.\n- Graphs of rates of operations and metrics as counters per 900 second period over the period covered.\n\n\nThe dashboard was last updated ${date}.\n"
                        }
                    }
                ]
            }
